name: CI/CD Pipeline
# This workflow is triggered on pushes to the repository.
on: push

jobs:
    CI:
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v2
            - name: Setup Node Runtime
              uses: actions/setup-node@v2-beta
              with:
                node-version: '13'
            - name: Install Dependencies
              run: yarn install
            - name: Lint
              run: yarn lint
            - name: Run Tests
              run: yarn test
            - name: Build Artifacts
              run: yarn build
            - name: Add Minimal package.json to Build Artifact
              run: cat package.json | jq '.dependencies={}' | jq '.devDependencies={}' | tee build/package.json
            - name: Upload Artifacts
              uses: actions/upload-artifact@v2
              with:
                name: build
                path: build
              
    publish:
        name: Publish
        needs: CI
        # only run this on qa & prod branches
        if: github.ref == 'refs/heads/qa' || github.ref == 'refs/heads/prod'
        runs-on: ubuntu-latest
        steps:
            - name: Download Artifact from CI Job
              uses: actions/download-artifact@v2
              with:
                name: build
            - name: Setup Node Runtime
              uses: actions/setup-node@v2-beta
              with:
                registry-url: 'https://npm.pkg.github.com'
                node-version: '13'
            - name: Extract Branch name for Tagging
              run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
              id: extract_branch
            - name: Extract Package name for Publishing
              run: echo "##[set-output name=package;]$(echo `jq '.name' package.json -r`)" 
              id: extract_package
            - name: Update Package Name to reflect Branch
              run: cat package.json | jq '.name=${{ steps.extract_package.outputs.package }}-${{ steps.extract_branch.outputs.branch }}' | tee package.json
            - name: Publish to Github Packages
              run: yarn publish
              env:
                NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              